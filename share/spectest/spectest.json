{
   "version" : "0.23",
   "comment" : "Generated by devscripts/gen-spectest on Sat Jun 14 11:59:02 2014",
   "tests" : [
      {
         "tags" : [
            "literal",
            "number"
         ],
         "result" : -31,
         "note" : "hex",
         "input" : "-0x1f"
      },
      {
         "result" : -1.2,
         "note" : "decimal",
         "input" : "-1.2",
         "tags" : [
            "literal",
            "number"
         ]
      },
      {
         "tags" : [
            "literal",
            "number"
         ],
         "result" : -12000,
         "note" : "exponent notation",
         "input" : "-1.2e4"
      },
      {
         "tags" : [
            "literal",
            "number"
         ],
         "result" : 13,
         "input" : "015",
         "note" : "octal uses 0o prefix, not 0"
      },
      {
         "tags" : [
            "literal",
            "number"
         ],
         "result" : 4,
         "note" : "binary",
         "input" : "0b100"
      },
      {
         "input" : "-0b100",
         "note" : "binary negative",
         "result" : -4,
         "tags" : [
            "literal",
            "number"
         ]
      },
      {
         "tags" : [
            "literal",
            "number"
         ],
         "result" : 15,
         "input" : "0o17",
         "note" : "octal"
      },
      {
         "result" : -15,
         "input" : "-0o17",
         "note" : "octal negative",
         "tags" : [
            "literal",
            "number"
         ]
      },
      {
         "dies" : 1,
         "tags" : [
            "literal",
            "number"
         ],
         "note" : "invalid hex digit",
         "input" : "0x1g"
      },
      {
         "note" : "invalid binary digit",
         "input" : "-0b2",
         "dies" : 1,
         "tags" : [
            "literal",
            "number"
         ]
      },
      {
         "input" : "0o18",
         "note" : "invalid octal digit",
         "tags" : [
            "literal",
            "number"
         ],
         "dies" : 1
      },
      {
         "tags" : [
            "literal",
            "number"
         ],
         "input" : "nan",
         "note" : "nan"
      },
      {
         "tags" : [
            "literal",
            "number"
         ],
         "input" : "inf",
         "note" : "inf"
      },
      {
         "input" : "-inf",
         "note" : "-inf",
         "tags" : [
            "literal",
            "number"
         ]
      },
      {
         "result" : [],
         "input" : "[]",
         "tags" : [
            "literal",
            "array"
         ]
      },
      {
         "result" : [
            1,
            2
         ],
         "input" : "[1,2]",
         "tags" : [
            "literal",
            "array"
         ]
      },
      {
         "tags" : [
            "literal",
            "array"
         ],
         "result" : [
            1,
            2,
            7
         ],
         "input" : "[1, 2, 3+4]"
      },
      {
         "dies" : 1,
         "tags" : [
            "literal",
            "array"
         ],
         "note" : "missing closing bracket",
         "input" : "["
      },
      {
         "note" : "missing opening bracket",
         "input" : "]",
         "dies" : 1,
         "tags" : [
            "literal",
            "array"
         ]
      },
      {
         "result" : [
            1
         ],
         "input" : "[1,]",
         "note" : "dangling comma",
         "tags" : [
            "literal",
            "array"
         ]
      },
      {
         "tags" : [
            "literal",
            "array"
         ],
         "dies" : 1,
         "note" : "missing comma",
         "input" : "[1 2]"
      },
      {
         "input" : "[a]",
         "note" : "missing quote",
         "dies" : 1,
         "tags" : [
            "literal",
            "array"
         ]
      },
      {
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{}",
         "result" : {}
      },
      {
         "input" : "{a=>1}",
         "result" : {
            "a" : 1
         },
         "tags" : [
            "literal",
            "hash"
         ]
      },
      {
         "tags" : [
            "literal",
            "hash"
         ],
         "result" : {
            "a" : 1
         },
         "input" : "{'a'=>1}"
      },
      {
         "input" : "{\"a b\"=>1}",
         "result" : {
            "a b" : 1
         },
         "tags" : [
            "literal",
            "hash"
         ]
      },
      {
         "note" : "expression not supported on pair key",
         "input" : "{(\"a\".\"b\")=>1}",
         "tags" : [
            "literal",
            "hash"
         ],
         "dies" : 1
      },
      {
         "tags" : [
            "literal",
            "hash"
         ],
         "result" : {
            "b c" : 2,
            "a" : 1
         },
         "input" : "{a=>1, \"b c\"=>1+1}",
         "note" : "expression allowed on pair value"
      },
      {
         "input" : "{",
         "note" : "missing opening brace",
         "dies" : 1,
         "tags" : [
            "literal",
            "hash"
         ]
      },
      {
         "note" : "missing closing brace",
         "input" : "}",
         "dies" : 1,
         "tags" : [
            "literal",
            "hash"
         ]
      },
      {
         "tags" : [
            "literal",
            "hash"
         ],
         "dies" : 1,
         "input" : "a=>1",
         "note" : "missing braces"
      },
      {
         "dies" : 1,
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{=>1}",
         "note" : "missing pair key"
      },
      {
         "note" : "missing pair value",
         "input" : "{a=>}",
         "tags" : [
            "literal",
            "hash"
         ],
         "dies" : 1
      },
      {
         "note" : "dangling comma",
         "input" : "{a=>1, }",
         "result" : {
            "a" : 1
         },
         "tags" : [
            "literal",
            "hash"
         ]
      },
      {
         "note" : "comma not allowed as arrow",
         "input" : "{a, 1}",
         "dies" : 1,
         "tags" : [
            "literal",
            "hash"
         ]
      }
   ]
}
