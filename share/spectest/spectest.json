{
   "version" : "0.23",
   "tests" : [
      {
         "note" : "hex",
         "input" : "-0x1f",
         "tags" : [
            "literal",
            "number"
         ],
         "result" : -31
      },
      {
         "result" : -1.2,
         "input" : "-1.2",
         "tags" : [
            "literal",
            "number"
         ],
         "note" : "decimal"
      },
      {
         "note" : "exponent notation",
         "tags" : [
            "literal",
            "number"
         ],
         "input" : "-1.2e4",
         "result" : -12000
      },
      {
         "note" : "octal uses 0o prefix, not 0",
         "input" : "015",
         "tags" : [
            "literal",
            "number"
         ],
         "result" : 13
      },
      {
         "result" : 4,
         "input" : "0b100",
         "tags" : [
            "literal",
            "number"
         ],
         "note" : "binary"
      },
      {
         "note" : "binary negative",
         "tags" : [
            "literal",
            "number"
         ],
         "input" : "-0b100",
         "result" : -4
      },
      {
         "result" : 15,
         "note" : "octal",
         "tags" : [
            "literal",
            "number"
         ],
         "input" : "0o17"
      },
      {
         "result" : -15,
         "note" : "octal negative",
         "tags" : [
            "literal",
            "number"
         ],
         "input" : "-0o17"
      },
      {
         "input" : "0x1g",
         "tags" : [
            "literal",
            "number"
         ],
         "dies" : 1,
         "note" : "invalid hex digit"
      },
      {
         "dies" : 1,
         "note" : "invalid binary digit",
         "tags" : [
            "literal",
            "number"
         ],
         "input" : "-0b2"
      },
      {
         "input" : "0o18",
         "tags" : [
            "literal",
            "number"
         ],
         "dies" : 1,
         "note" : "invalid octal digit"
      },
      {
         "input" : "[]",
         "tags" : [
            "literal",
            "array"
         ],
         "result" : []
      },
      {
         "result" : [
            1,
            2
         ],
         "tags" : [
            "literal",
            "array"
         ],
         "input" : "[1,2]"
      },
      {
         "result" : [
            1,
            2,
            7
         ],
         "input" : "[1, 2, 3+4]",
         "tags" : [
            "literal",
            "array"
         ]
      },
      {
         "note" : "missing closing bracket",
         "dies" : 1,
         "input" : "[",
         "tags" : [
            "literal",
            "array"
         ]
      },
      {
         "note" : "missing opening bracket",
         "dies" : 1,
         "input" : "]",
         "tags" : [
            "literal",
            "array"
         ]
      },
      {
         "note" : "dangling comma",
         "tags" : [
            "literal",
            "array"
         ],
         "input" : "[1,]",
         "result" : [
            1
         ]
      },
      {
         "tags" : [
            "literal",
            "array"
         ],
         "input" : "[1 2]",
         "note" : "missing comma",
         "dies" : 1
      },
      {
         "tags" : [
            "literal",
            "array"
         ],
         "input" : "[a]",
         "dies" : 1,
         "note" : "missing quote"
      },
      {
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{}",
         "result" : {}
      },
      {
         "result" : {
            "a" : 1
         },
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{a=>1}"
      },
      {
         "result" : {
            "a" : 1
         },
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{'a'=>1}"
      },
      {
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{\"a b\"=>1}",
         "result" : {
            "a b" : 1
         }
      },
      {
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{(\"a\".\"b\")=>1}",
         "dies" : 1,
         "note" : "expression not supported on pair key"
      },
      {
         "result" : {
            "a" : 1,
            "b c" : 2
         },
         "note" : "expression allowed on pair value",
         "input" : "{a=>1, \"b c\"=>1+1}",
         "tags" : [
            "literal",
            "hash"
         ]
      },
      {
         "dies" : 1,
         "note" : "missing opening brace",
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{"
      },
      {
         "dies" : 1,
         "note" : "missing closing brace",
         "input" : "}",
         "tags" : [
            "literal",
            "hash"
         ]
      },
      {
         "dies" : 1,
         "note" : "missing braces",
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "a=>1"
      },
      {
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{=>1}",
         "dies" : 1,
         "note" : "missing pair key"
      },
      {
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{a=>}",
         "note" : "missing pair value",
         "dies" : 1
      },
      {
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{a=>1, }",
         "note" : "dangling comma",
         "result" : {
            "a" : 1
         }
      },
      {
         "tags" : [
            "literal",
            "hash"
         ],
         "input" : "{a, 1}",
         "dies" : 1,
         "note" : "comma not allowed as arrow"
      }
   ],
   "comment" : "Generated by devscripts/gen-spectest on Sat May 31 09:36:11 2014"
}
