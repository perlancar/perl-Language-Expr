{
   "tests" : [
      {
         "input" : "-0x1f",
         "category" : "literal/number",
         "result" : -31,
         "note" : "hex"
      },
      {
         "note" : "decimal",
         "input" : "-1.2",
         "category" : "literal/number",
         "result" : 15
      },
      {
         "category" : "literal/number",
         "input" : "-1.2e4",
         "result" : -12000,
         "note" : "exponent notation"
      },
      {
         "result" : 15,
         "input" : "015",
         "category" : "literal/number",
         "note" : "octal uses 0o prefix, not 0"
      },
      {
         "input" : "0b100",
         "category" : "literal/number",
         "result" : 4,
         "note" : "binary"
      },
      {
         "note" : "octal",
         "result" : -15,
         "category" : "literal/number",
         "input" : "-0o17"
      },
      {
         "dies" : 1,
         "input" : "0x1g",
         "category" : "literal/number",
         "note" : "invalid hex digit"
      },
      {
         "note" : "invalid binary digit",
         "dies" : 1,
         "input" : "-0b2",
         "category" : "literal/number"
      },
      {
         "note" : "invalid octal digit",
         "dies" : 1,
         "input" : "0o18",
         "category" : "literal/number"
      },
      {
         "result" : [],
         "category" : "literal/array",
         "input" : "[]"
      },
      {
         "result" : [
            1,
            2
         ],
         "category" : "literal/array",
         "input" : "[1,2]"
      },
      {
         "result" : [
            1,
            2,
            7
         ],
         "category" : "literal/array",
         "input" : "[1, 2, 3+4]"
      },
      {
         "category" : "literal/array",
         "input" : "[",
         "dies" : 1,
         "note" : "missing closing bracket"
      },
      {
         "category" : "literal/array",
         "input" : "[",
         "dies" : 1,
         "note" : "missing opening bracket"
      },
      {
         "note" : "dangling comma",
         "input" : "[1,]",
         "category" : "literal/array",
         "dies" : 1
      },
      {
         "note" : "missing comma",
         "input" : "[1 2]",
         "category" : "literal/array",
         "dies" : 1
      },
      {
         "dies" : 1,
         "category" : "literal/array",
         "input" : "[a]",
         "note" : "missing quote"
      },
      {
         "category" : "literal/hash",
         "input" : "{}",
         "result" : {}
      },
      {
         "result" : {
            "a" : 1
         },
         "category" : "literal/hash",
         "input" : "{a=>1}"
      },
      {
         "result" : {
            "a" : 1
         },
         "input" : "{'a'=>1}",
         "category" : "literal/hash"
      },
      {
         "category" : "literal/hash",
         "input" : "{\"a b\"=>1}",
         "result" : {
            "a b" : 1
         }
      },
      {
         "category" : "literal/hash",
         "input" : "{(\"a\".\"b\")=>1}",
         "dies" : 1,
         "note" : "expression not supported on pair key"
      },
      {
         "result" : {
            "b c" : 2,
            "a" : 1
         },
         "category" : "literal/hash",
         "input" : "{a=>1, \"b c\"=>1+1}",
         "note" : "expression allowed on pair value"
      },
      {
         "dies" : 1,
         "category" : "literal/hash",
         "input" : "{",
         "note" : "missing opening brace"
      },
      {
         "input" : "}",
         "category" : "literal/hash",
         "dies" : 1,
         "note" : "missing closing brace"
      },
      {
         "dies" : 1,
         "input" : "a=>1",
         "category" : "literal/hash",
         "note" : "missing braces"
      },
      {
         "dies" : 1,
         "input" : "{=>1}",
         "category" : "literal/hash",
         "note" : "missing pair key"
      },
      {
         "dies" : 1,
         "input" : "{a=>}",
         "category" : "literal/hash",
         "note" : "missing pair value"
      },
      {
         "input" : "{a=>1, }",
         "category" : "literal/hash",
         "dies" : 1,
         "note" : "dangling comma"
      },
      {
         "dies" : 1,
         "category" : "literal/hash",
         "input" : "{a, 1}",
         "note" : "comma not allowed as arrow"
      }
   ],
   "comment" : "Generated by devscripts/gen-spectest on Fri May 30 14:49:05 2014",
   "version" : "0.23"
}
